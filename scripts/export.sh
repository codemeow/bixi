#!/bin/bash

# «C-otter» - C/C++ projects management system
#
#  Copyright (C) Alexey Shishkin 2016-2017
#
#  This file is part of Project «C-otter».
#
#  Project «C-otter» is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Project «C-otter» is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Project «C-otter». If not, see <http://www.gnu.org/licenses/>.

ExportInit()
{
    if [ "$DIRECTORY_DESTINATION" != "." ]
    then
        mkdir -p "./$DIRECTORY_INCLUDES/$DIRECTORY_DESTINATION"
    fi

    TEXT_LICENSE="/*
* «Bixi» - Basic types management C89 library
*
*  Copyright (C) Alexey Shishkin 2017
*
*  This file is part of Project «Bixi».
*
*  Project «Bixi» is free software: you can redistribute it and/or modify
*  it under the terms of the GNU Lesser General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  Project «Bixi» is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
*  GNU Lesser General Public License for more details.
*
*  You should have received a copy of the GNU Lesser General Public License
*  along with Project «Bixi». If not, see <http://www.gnu.org/licenses/>.
*/
"
    TEXT_GENERATOR="/* This file was generated by $(basename $0) at $(date +"%D %T") */"
    TEXT_HGUARD=$(echo "LIB${PROJECT_NAME}_H" | awk '{ print toupper($0)}')

    DIRECTORY_CURRENT="$PWD"
    FILE_TARGET="$DIRECTORY_CURRENT/$DIRECTORY_INCLUDES/"
    FILE_TARGET+="$EXPORT_FILE_PREFIX$PROJECT_NAME.h"
}

FindHeaders()
{
    FILES_HEADER=$(find -name "*.h" -o -name "*.hpp")
}

ScanHeaders()
{
    cat "$1"           |
    grep '^#include "' |
    tr -d '"'          |
    awk '{print $2}'   |
    sed 's/\.\./\./'
}

ScanFile()
{
    HEADERS_LIST=$(echo -e "$1\n$HEADERS_LIST")
    local HRS=$(ScanHeaders "$1")
    local f
    for f in $HRS;
    do
       ScanFile "$f"
    done
}

ScanFiles()
{
    HEADERS_LIST=""

    for file in $FILES_HEADER
    do
        ScanFile "$file"
    done

    HEADERS_LIST=$(echo "$HEADERS_LIST" | awk '!a[$0]++')
}

ExtractFile()
{
    FILE_HEADER=$1
    echo "├ $FILE_HEADER"

    # Insert file name
    echo -e "\n/* Exported from $FILE_HEADER */" >> $FILE_TARGET
    # Scan for exportable define statements
    awk '
        /^EXPORT_TO/ {
          set = 0;
          printf("\n");
        }
        { if (set) print $0; }
        /^EXPORT_FROM/ {
          set=1;
        }
        /^EXPORT / {
          sub(/EXPORT /,"",$0);
          level=1
          count=0
        }
        level {
          n = split($0, c, "");
          for (i = 1; i <= n; i++) {
            printf(c[i]);
            if (c[i] == ";") {
                if(level==1) {
                    level = 0;
                    if (count != 0)
                        printf("\n");
                }
            }
            else if (c[i] == "{") {
                level++;
                count++;
            }
            else if (c[i] == "}") {
                level--;
                count++;
            }
          }
          printf("\n")
        }' $FILE_HEADER >> $FILE_TARGET
}

ExtractFiles()
{
    local f
    for f in $HEADERS_LIST
    do
        ExtractFile "$f"
    done
}

PrepareTarget()
{
    echo "$TEXT_LICENSE" > $FILE_TARGET
    echo "$TEXT_GENERATOR" >> $FILE_TARGET
    echo "#ifndef $TEXT_HGUARD" >> $FILE_TARGET
    echo "#define $TEXT_HGUARD" >> $FILE_TARGET
    echo >> $FILE_TARGET
    if [ ! -z "$DEPENDENCY_CINCLUDES" ]
    then
        DEPENDENCY_CINCLUDES_LIST=( $DEPENDENCY_CINCLUDES )

        for DEPENDENCY_CINCLUDES_SINGLE in ${DEPENDENCY_CINCLUDES_LIST[@]};
        do
            echo "#include $DEPENDENCY_CINCLUDES_SINGLE" >> $FILE_TARGET
        done

        echo >> $FILE_TARGET
    fi
}

FinishTarget()
{
    echo >> $FILE_TARGET
    echo "#endif /* $TEXT_HGUARD */" >> $FILE_TARGET
}

MoveTarget()
{
    if [ "$DIRECTORY_DESTINATION" != "." ]
    then
        mv "$FILE_TARGET" \
           "$DIRECTORY_CURRENT/$DIRECTORY_INCLUDES/$DIRECTORY_DESTINATION/"
    fi
}

ExportSingle()
{
    ExportInit

    cd $DIRECTORY_PROJECT

    FindHeaders
    ScanFiles
    PrepareTarget
    ExtractFiles
    FinishTarget
    MoveTarget

    cd $DIRECTORY_CURRENT
}
